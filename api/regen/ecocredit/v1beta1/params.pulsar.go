// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package ecocreditv1beta1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	v1beta1 "github.com/cosmos/cosmos-sdk/api/cosmos/base/v1beta1"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_MsgUpdateAllowedClassCreators                 protoreflect.MessageDescriptor
	fd_MsgUpdateAllowedClassCreators_add_creators    protoreflect.FieldDescriptor
	fd_MsgUpdateAllowedClassCreators_remove_creators protoreflect.FieldDescriptor
)

func init() {
	file_regen_ecocredit_v1beta1_params_proto_init()
	md_MsgUpdateAllowedClassCreators = File_regen_ecocredit_v1beta1_params_proto.Messages().ByName("MsgUpdateAllowedClassCreators")
	fd_MsgUpdateAllowedClassCreators_add_creators = md_MsgUpdateAllowedClassCreators.Fields().ByName("add_creators")
	fd_MsgUpdateAllowedClassCreators_remove_creators = md_MsgUpdateAllowedClassCreators.Fields().ByName("remove_creators")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateAllowedClassCreators)(nil)

type fastReflection_MsgUpdateAllowedClassCreators MsgUpdateAllowedClassCreators

func (x *MsgUpdateAllowedClassCreators) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateAllowedClassCreators)(x)
}

func (x *MsgUpdateAllowedClassCreators) slowProtoReflect() protoreflect.Message {
	mi := &file_regen_ecocredit_v1beta1_params_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateAllowedClassCreators_messageType fastReflection_MsgUpdateAllowedClassCreators_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateAllowedClassCreators_messageType{}

type fastReflection_MsgUpdateAllowedClassCreators_messageType struct{}

func (x fastReflection_MsgUpdateAllowedClassCreators_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateAllowedClassCreators)(nil)
}
func (x fastReflection_MsgUpdateAllowedClassCreators_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateAllowedClassCreators)
}
func (x fastReflection_MsgUpdateAllowedClassCreators_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateAllowedClassCreators
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateAllowedClassCreators) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateAllowedClassCreators
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateAllowedClassCreators) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateAllowedClassCreators_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateAllowedClassCreators) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateAllowedClassCreators)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateAllowedClassCreators) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateAllowedClassCreators)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateAllowedClassCreators) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AddCreators != "" {
		value := protoreflect.ValueOfString(x.AddCreators)
		if !f(fd_MsgUpdateAllowedClassCreators_add_creators, value) {
			return
		}
	}
	if x.RemoveCreators != "" {
		value := protoreflect.ValueOfString(x.RemoveCreators)
		if !f(fd_MsgUpdateAllowedClassCreators_remove_creators, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateAllowedClassCreators) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators.add_creators":
		return x.AddCreators != ""
	case "regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators.remove_creators":
		return x.RemoveCreators != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateAllowedClassCreators) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators.add_creators":
		x.AddCreators = ""
	case "regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators.remove_creators":
		x.RemoveCreators = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateAllowedClassCreators) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators.add_creators":
		value := x.AddCreators
		return protoreflect.ValueOfString(value)
	case "regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators.remove_creators":
		value := x.RemoveCreators
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateAllowedClassCreators) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators.add_creators":
		x.AddCreators = value.Interface().(string)
	case "regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators.remove_creators":
		x.RemoveCreators = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateAllowedClassCreators) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators.add_creators":
		panic(fmt.Errorf("field add_creators of message regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators is not mutable"))
	case "regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators.remove_creators":
		panic(fmt.Errorf("field remove_creators of message regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateAllowedClassCreators) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators.add_creators":
		return protoreflect.ValueOfString("")
	case "regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators.remove_creators":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateAllowedClassCreators) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateAllowedClassCreators) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateAllowedClassCreators) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateAllowedClassCreators) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateAllowedClassCreators) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateAllowedClassCreators)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.AddCreators)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RemoveCreators)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateAllowedClassCreators)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.RemoveCreators) > 0 {
			i -= len(x.RemoveCreators)
			copy(dAtA[i:], x.RemoveCreators)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RemoveCreators)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.AddCreators) > 0 {
			i -= len(x.AddCreators)
			copy(dAtA[i:], x.AddCreators)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AddCreators)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateAllowedClassCreators)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateAllowedClassCreators: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateAllowedClassCreators: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AddCreators", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AddCreators = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemoveCreators", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RemoveCreators = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgToggleAllowlist         protoreflect.MessageDescriptor
	fd_MsgToggleAllowlist_setting protoreflect.FieldDescriptor
)

func init() {
	file_regen_ecocredit_v1beta1_params_proto_init()
	md_MsgToggleAllowlist = File_regen_ecocredit_v1beta1_params_proto.Messages().ByName("MsgToggleAllowlist")
	fd_MsgToggleAllowlist_setting = md_MsgToggleAllowlist.Fields().ByName("setting")
}

var _ protoreflect.Message = (*fastReflection_MsgToggleAllowlist)(nil)

type fastReflection_MsgToggleAllowlist MsgToggleAllowlist

func (x *MsgToggleAllowlist) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgToggleAllowlist)(x)
}

func (x *MsgToggleAllowlist) slowProtoReflect() protoreflect.Message {
	mi := &file_regen_ecocredit_v1beta1_params_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgToggleAllowlist_messageType fastReflection_MsgToggleAllowlist_messageType
var _ protoreflect.MessageType = fastReflection_MsgToggleAllowlist_messageType{}

type fastReflection_MsgToggleAllowlist_messageType struct{}

func (x fastReflection_MsgToggleAllowlist_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgToggleAllowlist)(nil)
}
func (x fastReflection_MsgToggleAllowlist_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgToggleAllowlist)
}
func (x fastReflection_MsgToggleAllowlist_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgToggleAllowlist
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgToggleAllowlist) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgToggleAllowlist
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgToggleAllowlist) Type() protoreflect.MessageType {
	return _fastReflection_MsgToggleAllowlist_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgToggleAllowlist) New() protoreflect.Message {
	return new(fastReflection_MsgToggleAllowlist)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgToggleAllowlist) Interface() protoreflect.ProtoMessage {
	return (*MsgToggleAllowlist)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgToggleAllowlist) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Setting != false {
		value := protoreflect.ValueOfBool(x.Setting)
		if !f(fd_MsgToggleAllowlist_setting, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgToggleAllowlist) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgToggleAllowlist.setting":
		return x.Setting != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgToggleAllowlist"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgToggleAllowlist does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgToggleAllowlist) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgToggleAllowlist.setting":
		x.Setting = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgToggleAllowlist"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgToggleAllowlist does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgToggleAllowlist) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "regen.ecocredit.v1beta1.MsgToggleAllowlist.setting":
		value := x.Setting
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgToggleAllowlist"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgToggleAllowlist does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgToggleAllowlist) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgToggleAllowlist.setting":
		x.Setting = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgToggleAllowlist"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgToggleAllowlist does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgToggleAllowlist) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgToggleAllowlist.setting":
		panic(fmt.Errorf("field setting of message regen.ecocredit.v1beta1.MsgToggleAllowlist is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgToggleAllowlist"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgToggleAllowlist does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgToggleAllowlist) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgToggleAllowlist.setting":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgToggleAllowlist"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgToggleAllowlist does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgToggleAllowlist) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in regen.ecocredit.v1beta1.MsgToggleAllowlist", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgToggleAllowlist) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgToggleAllowlist) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgToggleAllowlist) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgToggleAllowlist) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgToggleAllowlist)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Setting {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgToggleAllowlist)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Setting {
			i--
			if x.Setting {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgToggleAllowlist)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgToggleAllowlist: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgToggleAllowlist: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Setting", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Setting = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgUpdateCreditTypes_1_list)(nil)

type _MsgUpdateCreditTypes_1_list struct {
	list *[]*CreditType
}

func (x *_MsgUpdateCreditTypes_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateCreditTypes_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateCreditTypes_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CreditType)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateCreditTypes_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CreditType)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateCreditTypes_1_list) AppendMutable() protoreflect.Value {
	v := new(CreditType)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCreditTypes_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateCreditTypes_1_list) NewElement() protoreflect.Value {
	v := new(CreditType)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCreditTypes_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgUpdateCreditTypes                  protoreflect.MessageDescriptor
	fd_MsgUpdateCreditTypes_add_credit_types protoreflect.FieldDescriptor
)

func init() {
	file_regen_ecocredit_v1beta1_params_proto_init()
	md_MsgUpdateCreditTypes = File_regen_ecocredit_v1beta1_params_proto.Messages().ByName("MsgUpdateCreditTypes")
	fd_MsgUpdateCreditTypes_add_credit_types = md_MsgUpdateCreditTypes.Fields().ByName("add_credit_types")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateCreditTypes)(nil)

type fastReflection_MsgUpdateCreditTypes MsgUpdateCreditTypes

func (x *MsgUpdateCreditTypes) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateCreditTypes)(x)
}

func (x *MsgUpdateCreditTypes) slowProtoReflect() protoreflect.Message {
	mi := &file_regen_ecocredit_v1beta1_params_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateCreditTypes_messageType fastReflection_MsgUpdateCreditTypes_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateCreditTypes_messageType{}

type fastReflection_MsgUpdateCreditTypes_messageType struct{}

func (x fastReflection_MsgUpdateCreditTypes_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateCreditTypes)(nil)
}
func (x fastReflection_MsgUpdateCreditTypes_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateCreditTypes)
}
func (x fastReflection_MsgUpdateCreditTypes_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateCreditTypes
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateCreditTypes) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateCreditTypes
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateCreditTypes) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateCreditTypes_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateCreditTypes) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateCreditTypes)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateCreditTypes) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateCreditTypes)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateCreditTypes) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.AddCreditTypes) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateCreditTypes_1_list{list: &x.AddCreditTypes})
		if !f(fd_MsgUpdateCreditTypes_add_credit_types, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateCreditTypes) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateCreditTypes.add_credit_types":
		return len(x.AddCreditTypes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateCreditTypes"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateCreditTypes does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateCreditTypes) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateCreditTypes.add_credit_types":
		x.AddCreditTypes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateCreditTypes"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateCreditTypes does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateCreditTypes) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateCreditTypes.add_credit_types":
		if len(x.AddCreditTypes) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateCreditTypes_1_list{})
		}
		listValue := &_MsgUpdateCreditTypes_1_list{list: &x.AddCreditTypes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateCreditTypes"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateCreditTypes does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateCreditTypes) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateCreditTypes.add_credit_types":
		lv := value.List()
		clv := lv.(*_MsgUpdateCreditTypes_1_list)
		x.AddCreditTypes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateCreditTypes"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateCreditTypes does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateCreditTypes) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateCreditTypes.add_credit_types":
		if x.AddCreditTypes == nil {
			x.AddCreditTypes = []*CreditType{}
		}
		value := &_MsgUpdateCreditTypes_1_list{list: &x.AddCreditTypes}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateCreditTypes"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateCreditTypes does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateCreditTypes) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateCreditTypes.add_credit_types":
		list := []*CreditType{}
		return protoreflect.ValueOfList(&_MsgUpdateCreditTypes_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateCreditTypes"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateCreditTypes does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateCreditTypes) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in regen.ecocredit.v1beta1.MsgUpdateCreditTypes", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateCreditTypes) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateCreditTypes) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateCreditTypes) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateCreditTypes) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateCreditTypes)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.AddCreditTypes) > 0 {
			for _, e := range x.AddCreditTypes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateCreditTypes)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.AddCreditTypes) > 0 {
			for iNdEx := len(x.AddCreditTypes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AddCreditTypes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateCreditTypes)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateCreditTypes: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateCreditTypes: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AddCreditTypes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AddCreditTypes = append(x.AddCreditTypes, &CreditType{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AddCreditTypes[len(x.AddCreditTypes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgUpdateCreditClassFees_1_list)(nil)

type _MsgUpdateCreditClassFees_1_list struct {
	list *[]*v1beta1.Coin
}

func (x *_MsgUpdateCreditClassFees_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateCreditClassFees_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateCreditClassFees_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateCreditClassFees_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateCreditClassFees_1_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCreditClassFees_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateCreditClassFees_1_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCreditClassFees_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateCreditClassFees_2_list)(nil)

type _MsgUpdateCreditClassFees_2_list struct {
	list *[]*v1beta1.Coin
}

func (x *_MsgUpdateCreditClassFees_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateCreditClassFees_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateCreditClassFees_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateCreditClassFees_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateCreditClassFees_2_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCreditClassFees_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateCreditClassFees_2_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCreditClassFees_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgUpdateCreditClassFees                         protoreflect.MessageDescriptor
	fd_MsgUpdateCreditClassFees_add_credit_class_fee    protoreflect.FieldDescriptor
	fd_MsgUpdateCreditClassFees_remove_credit_class_fee protoreflect.FieldDescriptor
)

func init() {
	file_regen_ecocredit_v1beta1_params_proto_init()
	md_MsgUpdateCreditClassFees = File_regen_ecocredit_v1beta1_params_proto.Messages().ByName("MsgUpdateCreditClassFees")
	fd_MsgUpdateCreditClassFees_add_credit_class_fee = md_MsgUpdateCreditClassFees.Fields().ByName("add_credit_class_fee")
	fd_MsgUpdateCreditClassFees_remove_credit_class_fee = md_MsgUpdateCreditClassFees.Fields().ByName("remove_credit_class_fee")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateCreditClassFees)(nil)

type fastReflection_MsgUpdateCreditClassFees MsgUpdateCreditClassFees

func (x *MsgUpdateCreditClassFees) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateCreditClassFees)(x)
}

func (x *MsgUpdateCreditClassFees) slowProtoReflect() protoreflect.Message {
	mi := &file_regen_ecocredit_v1beta1_params_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateCreditClassFees_messageType fastReflection_MsgUpdateCreditClassFees_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateCreditClassFees_messageType{}

type fastReflection_MsgUpdateCreditClassFees_messageType struct{}

func (x fastReflection_MsgUpdateCreditClassFees_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateCreditClassFees)(nil)
}
func (x fastReflection_MsgUpdateCreditClassFees_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateCreditClassFees)
}
func (x fastReflection_MsgUpdateCreditClassFees_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateCreditClassFees
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateCreditClassFees) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateCreditClassFees
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateCreditClassFees) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateCreditClassFees_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateCreditClassFees) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateCreditClassFees)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateCreditClassFees) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateCreditClassFees)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateCreditClassFees) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.AddCreditClassFee) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateCreditClassFees_1_list{list: &x.AddCreditClassFee})
		if !f(fd_MsgUpdateCreditClassFees_add_credit_class_fee, value) {
			return
		}
	}
	if len(x.RemoveCreditClassFee) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateCreditClassFees_2_list{list: &x.RemoveCreditClassFee})
		if !f(fd_MsgUpdateCreditClassFees_remove_credit_class_fee, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateCreditClassFees) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateCreditClassFees.add_credit_class_fee":
		return len(x.AddCreditClassFee) != 0
	case "regen.ecocredit.v1beta1.MsgUpdateCreditClassFees.remove_credit_class_fee":
		return len(x.RemoveCreditClassFee) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateCreditClassFees"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateCreditClassFees does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateCreditClassFees) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateCreditClassFees.add_credit_class_fee":
		x.AddCreditClassFee = nil
	case "regen.ecocredit.v1beta1.MsgUpdateCreditClassFees.remove_credit_class_fee":
		x.RemoveCreditClassFee = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateCreditClassFees"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateCreditClassFees does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateCreditClassFees) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateCreditClassFees.add_credit_class_fee":
		if len(x.AddCreditClassFee) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateCreditClassFees_1_list{})
		}
		listValue := &_MsgUpdateCreditClassFees_1_list{list: &x.AddCreditClassFee}
		return protoreflect.ValueOfList(listValue)
	case "regen.ecocredit.v1beta1.MsgUpdateCreditClassFees.remove_credit_class_fee":
		if len(x.RemoveCreditClassFee) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateCreditClassFees_2_list{})
		}
		listValue := &_MsgUpdateCreditClassFees_2_list{list: &x.RemoveCreditClassFee}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateCreditClassFees"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateCreditClassFees does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateCreditClassFees) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateCreditClassFees.add_credit_class_fee":
		lv := value.List()
		clv := lv.(*_MsgUpdateCreditClassFees_1_list)
		x.AddCreditClassFee = *clv.list
	case "regen.ecocredit.v1beta1.MsgUpdateCreditClassFees.remove_credit_class_fee":
		lv := value.List()
		clv := lv.(*_MsgUpdateCreditClassFees_2_list)
		x.RemoveCreditClassFee = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateCreditClassFees"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateCreditClassFees does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateCreditClassFees) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateCreditClassFees.add_credit_class_fee":
		if x.AddCreditClassFee == nil {
			x.AddCreditClassFee = []*v1beta1.Coin{}
		}
		value := &_MsgUpdateCreditClassFees_1_list{list: &x.AddCreditClassFee}
		return protoreflect.ValueOfList(value)
	case "regen.ecocredit.v1beta1.MsgUpdateCreditClassFees.remove_credit_class_fee":
		if x.RemoveCreditClassFee == nil {
			x.RemoveCreditClassFee = []*v1beta1.Coin{}
		}
		value := &_MsgUpdateCreditClassFees_2_list{list: &x.RemoveCreditClassFee}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateCreditClassFees"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateCreditClassFees does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateCreditClassFees) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateCreditClassFees.add_credit_class_fee":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_MsgUpdateCreditClassFees_1_list{list: &list})
	case "regen.ecocredit.v1beta1.MsgUpdateCreditClassFees.remove_credit_class_fee":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_MsgUpdateCreditClassFees_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateCreditClassFees"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateCreditClassFees does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateCreditClassFees) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in regen.ecocredit.v1beta1.MsgUpdateCreditClassFees", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateCreditClassFees) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateCreditClassFees) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateCreditClassFees) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateCreditClassFees) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateCreditClassFees)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.AddCreditClassFee) > 0 {
			for _, e := range x.AddCreditClassFee {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.RemoveCreditClassFee) > 0 {
			for _, e := range x.RemoveCreditClassFee {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateCreditClassFees)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.RemoveCreditClassFee) > 0 {
			for iNdEx := len(x.RemoveCreditClassFee) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.RemoveCreditClassFee[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.AddCreditClassFee) > 0 {
			for iNdEx := len(x.AddCreditClassFee) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AddCreditClassFee[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateCreditClassFees)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateCreditClassFees: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateCreditClassFees: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AddCreditClassFee", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AddCreditClassFee = append(x.AddCreditClassFee, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AddCreditClassFee[len(x.AddCreditClassFee)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemoveCreditClassFee", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RemoveCreditClassFee = append(x.RemoveCreditClassFee, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RemoveCreditClassFee[len(x.RemoveCreditClassFee)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgUpdateBasketCreationFees_1_list)(nil)

type _MsgUpdateBasketCreationFees_1_list struct {
	list *[]*v1beta1.Coin
}

func (x *_MsgUpdateBasketCreationFees_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateBasketCreationFees_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateBasketCreationFees_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateBasketCreationFees_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateBasketCreationFees_1_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateBasketCreationFees_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateBasketCreationFees_1_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateBasketCreationFees_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateBasketCreationFees_2_list)(nil)

type _MsgUpdateBasketCreationFees_2_list struct {
	list *[]*v1beta1.Coin
}

func (x *_MsgUpdateBasketCreationFees_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateBasketCreationFees_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateBasketCreationFees_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateBasketCreationFees_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateBasketCreationFees_2_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateBasketCreationFees_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateBasketCreationFees_2_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateBasketCreationFees_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgUpdateBasketCreationFees                            protoreflect.MessageDescriptor
	fd_MsgUpdateBasketCreationFees_add_basket_creation_fee    protoreflect.FieldDescriptor
	fd_MsgUpdateBasketCreationFees_remove_basket_creation_fee protoreflect.FieldDescriptor
)

func init() {
	file_regen_ecocredit_v1beta1_params_proto_init()
	md_MsgUpdateBasketCreationFees = File_regen_ecocredit_v1beta1_params_proto.Messages().ByName("MsgUpdateBasketCreationFees")
	fd_MsgUpdateBasketCreationFees_add_basket_creation_fee = md_MsgUpdateBasketCreationFees.Fields().ByName("add_basket_creation_fee")
	fd_MsgUpdateBasketCreationFees_remove_basket_creation_fee = md_MsgUpdateBasketCreationFees.Fields().ByName("remove_basket_creation_fee")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateBasketCreationFees)(nil)

type fastReflection_MsgUpdateBasketCreationFees MsgUpdateBasketCreationFees

func (x *MsgUpdateBasketCreationFees) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateBasketCreationFees)(x)
}

func (x *MsgUpdateBasketCreationFees) slowProtoReflect() protoreflect.Message {
	mi := &file_regen_ecocredit_v1beta1_params_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateBasketCreationFees_messageType fastReflection_MsgUpdateBasketCreationFees_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateBasketCreationFees_messageType{}

type fastReflection_MsgUpdateBasketCreationFees_messageType struct{}

func (x fastReflection_MsgUpdateBasketCreationFees_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateBasketCreationFees)(nil)
}
func (x fastReflection_MsgUpdateBasketCreationFees_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateBasketCreationFees)
}
func (x fastReflection_MsgUpdateBasketCreationFees_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateBasketCreationFees
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateBasketCreationFees) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateBasketCreationFees
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateBasketCreationFees) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateBasketCreationFees_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateBasketCreationFees) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateBasketCreationFees)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateBasketCreationFees) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateBasketCreationFees)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateBasketCreationFees) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.AddBasketCreationFee) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateBasketCreationFees_1_list{list: &x.AddBasketCreationFee})
		if !f(fd_MsgUpdateBasketCreationFees_add_basket_creation_fee, value) {
			return
		}
	}
	if len(x.RemoveBasketCreationFee) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateBasketCreationFees_2_list{list: &x.RemoveBasketCreationFee})
		if !f(fd_MsgUpdateBasketCreationFees_remove_basket_creation_fee, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateBasketCreationFees) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees.add_basket_creation_fee":
		return len(x.AddBasketCreationFee) != 0
	case "regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees.remove_basket_creation_fee":
		return len(x.RemoveBasketCreationFee) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateBasketCreationFees) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees.add_basket_creation_fee":
		x.AddBasketCreationFee = nil
	case "regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees.remove_basket_creation_fee":
		x.RemoveBasketCreationFee = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateBasketCreationFees) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees.add_basket_creation_fee":
		if len(x.AddBasketCreationFee) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateBasketCreationFees_1_list{})
		}
		listValue := &_MsgUpdateBasketCreationFees_1_list{list: &x.AddBasketCreationFee}
		return protoreflect.ValueOfList(listValue)
	case "regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees.remove_basket_creation_fee":
		if len(x.RemoveBasketCreationFee) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateBasketCreationFees_2_list{})
		}
		listValue := &_MsgUpdateBasketCreationFees_2_list{list: &x.RemoveBasketCreationFee}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateBasketCreationFees) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees.add_basket_creation_fee":
		lv := value.List()
		clv := lv.(*_MsgUpdateBasketCreationFees_1_list)
		x.AddBasketCreationFee = *clv.list
	case "regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees.remove_basket_creation_fee":
		lv := value.List()
		clv := lv.(*_MsgUpdateBasketCreationFees_2_list)
		x.RemoveBasketCreationFee = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateBasketCreationFees) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees.add_basket_creation_fee":
		if x.AddBasketCreationFee == nil {
			x.AddBasketCreationFee = []*v1beta1.Coin{}
		}
		value := &_MsgUpdateBasketCreationFees_1_list{list: &x.AddBasketCreationFee}
		return protoreflect.ValueOfList(value)
	case "regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees.remove_basket_creation_fee":
		if x.RemoveBasketCreationFee == nil {
			x.RemoveBasketCreationFee = []*v1beta1.Coin{}
		}
		value := &_MsgUpdateBasketCreationFees_2_list{list: &x.RemoveBasketCreationFee}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateBasketCreationFees) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees.add_basket_creation_fee":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_MsgUpdateBasketCreationFees_1_list{list: &list})
	case "regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees.remove_basket_creation_fee":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_MsgUpdateBasketCreationFees_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees"))
		}
		panic(fmt.Errorf("message regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateBasketCreationFees) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateBasketCreationFees) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateBasketCreationFees) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateBasketCreationFees) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateBasketCreationFees) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateBasketCreationFees)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.AddBasketCreationFee) > 0 {
			for _, e := range x.AddBasketCreationFee {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.RemoveBasketCreationFee) > 0 {
			for _, e := range x.RemoveBasketCreationFee {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateBasketCreationFees)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.RemoveBasketCreationFee) > 0 {
			for iNdEx := len(x.RemoveBasketCreationFee) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.RemoveBasketCreationFee[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.AddBasketCreationFee) > 0 {
			for iNdEx := len(x.AddBasketCreationFee) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AddBasketCreationFee[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateBasketCreationFees)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateBasketCreationFees: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateBasketCreationFees: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AddBasketCreationFee", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AddBasketCreationFee = append(x.AddBasketCreationFee, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AddBasketCreationFee[len(x.AddBasketCreationFee)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemoveBasketCreationFee", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RemoveBasketCreationFee = append(x.RemoveBasketCreationFee, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RemoveBasketCreationFee[len(x.RemoveBasketCreationFee)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        v3.19.1
// source: regen/ecocredit/v1beta1/params.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MsgUpdateAllowedClassCreators is a structure to update the allow list
type MsgUpdateAllowedClassCreators struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// add_creators is a list of addresses to add to the allow list
	AddCreators string `protobuf:"bytes,1,opt,name=add_creators,json=addCreators,proto3" json:"add_creators,omitempty"`
	// remove_creators is a list of addresses to remove from the allow list
	RemoveCreators string `protobuf:"bytes,2,opt,name=remove_creators,json=removeCreators,proto3" json:"remove_creators,omitempty"`
}

func (x *MsgUpdateAllowedClassCreators) Reset() {
	*x = MsgUpdateAllowedClassCreators{}
	if protoimpl.UnsafeEnabled {
		mi := &file_regen_ecocredit_v1beta1_params_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateAllowedClassCreators) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateAllowedClassCreators) ProtoMessage() {}

// Deprecated: Use MsgUpdateAllowedClassCreators.ProtoReflect.Descriptor instead.
func (*MsgUpdateAllowedClassCreators) Descriptor() ([]byte, []int) {
	return file_regen_ecocredit_v1beta1_params_proto_rawDescGZIP(), []int{0}
}

func (x *MsgUpdateAllowedClassCreators) GetAddCreators() string {
	if x != nil {
		return x.AddCreators
	}
	return ""
}

func (x *MsgUpdateAllowedClassCreators) GetRemoveCreators() string {
	if x != nil {
		return x.RemoveCreators
	}
	return ""
}

// MsgToggleAllowlist is a structure to toggle the global allow list.
type MsgToggleAllowlist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// setting is the boolean value to set for the allowlist.
	// true = on , false = off.
	Setting bool `protobuf:"varint,1,opt,name=setting,proto3" json:"setting,omitempty"`
}

func (x *MsgToggleAllowlist) Reset() {
	*x = MsgToggleAllowlist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_regen_ecocredit_v1beta1_params_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgToggleAllowlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToggleAllowlist) ProtoMessage() {}

// Deprecated: Use MsgToggleAllowlist.ProtoReflect.Descriptor instead.
func (*MsgToggleAllowlist) Descriptor() ([]byte, []int) {
	return file_regen_ecocredit_v1beta1_params_proto_rawDescGZIP(), []int{1}
}

func (x *MsgToggleAllowlist) GetSetting() bool {
	if x != nil {
		return x.Setting
	}
	return false
}

type MsgUpdateCreditTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// add_credit_types is a list of credit types to add to the credit type list.
	AddCreditTypes []*CreditType `protobuf:"bytes,1,rep,name=add_credit_types,json=addCreditTypes,proto3" json:"add_credit_types,omitempty"`
}

func (x *MsgUpdateCreditTypes) Reset() {
	*x = MsgUpdateCreditTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_regen_ecocredit_v1beta1_params_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateCreditTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateCreditTypes) ProtoMessage() {}

// Deprecated: Use MsgUpdateCreditTypes.ProtoReflect.Descriptor instead.
func (*MsgUpdateCreditTypes) Descriptor() ([]byte, []int) {
	return file_regen_ecocredit_v1beta1_params_proto_rawDescGZIP(), []int{2}
}

func (x *MsgUpdateCreditTypes) GetAddCreditTypes() []*CreditType {
	if x != nil {
		return x.AddCreditTypes
	}
	return nil
}

type MsgUpdateCreditClassFees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// add_credit_class_fee defines coins to add to the existing fee list
	AddCreditClassFee []*v1beta1.Coin `protobuf:"bytes,1,rep,name=add_credit_class_fee,json=addCreditClassFee,proto3" json:"add_credit_class_fee,omitempty"`
	// remove_credit_class_fee defines coins to remove from the existing fee list
	RemoveCreditClassFee []*v1beta1.Coin `protobuf:"bytes,2,rep,name=remove_credit_class_fee,json=removeCreditClassFee,proto3" json:"remove_credit_class_fee,omitempty"`
}

func (x *MsgUpdateCreditClassFees) Reset() {
	*x = MsgUpdateCreditClassFees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_regen_ecocredit_v1beta1_params_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateCreditClassFees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateCreditClassFees) ProtoMessage() {}

// Deprecated: Use MsgUpdateCreditClassFees.ProtoReflect.Descriptor instead.
func (*MsgUpdateCreditClassFees) Descriptor() ([]byte, []int) {
	return file_regen_ecocredit_v1beta1_params_proto_rawDescGZIP(), []int{3}
}

func (x *MsgUpdateCreditClassFees) GetAddCreditClassFee() []*v1beta1.Coin {
	if x != nil {
		return x.AddCreditClassFee
	}
	return nil
}

func (x *MsgUpdateCreditClassFees) GetRemoveCreditClassFee() []*v1beta1.Coin {
	if x != nil {
		return x.RemoveCreditClassFee
	}
	return nil
}

type MsgUpdateBasketCreationFees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// add_basket_creation_fee defines coins to add to the existing fee list
	AddBasketCreationFee []*v1beta1.Coin `protobuf:"bytes,1,rep,name=add_basket_creation_fee,json=addBasketCreationFee,proto3" json:"add_basket_creation_fee,omitempty"`
	// remove_basket_creation_fee defines coins to remove from the existing fee list
	RemoveBasketCreationFee []*v1beta1.Coin `protobuf:"bytes,2,rep,name=remove_basket_creation_fee,json=removeBasketCreationFee,proto3" json:"remove_basket_creation_fee,omitempty"`
}

func (x *MsgUpdateBasketCreationFees) Reset() {
	*x = MsgUpdateBasketCreationFees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_regen_ecocredit_v1beta1_params_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateBasketCreationFees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateBasketCreationFees) ProtoMessage() {}

// Deprecated: Use MsgUpdateBasketCreationFees.ProtoReflect.Descriptor instead.
func (*MsgUpdateBasketCreationFees) Descriptor() ([]byte, []int) {
	return file_regen_ecocredit_v1beta1_params_proto_rawDescGZIP(), []int{4}
}

func (x *MsgUpdateBasketCreationFees) GetAddBasketCreationFee() []*v1beta1.Coin {
	if x != nil {
		return x.AddBasketCreationFee
	}
	return nil
}

func (x *MsgUpdateBasketCreationFees) GetRemoveBasketCreationFee() []*v1beta1.Coin {
	if x != nil {
		return x.RemoveBasketCreationFee
	}
	return nil
}

var File_regen_ecocredit_v1beta1_params_proto protoreflect.FileDescriptor

var file_regen_ecocredit_v1beta1_params_proto_rawDesc = []byte{
	0x0a, 0x24, 0x72, 0x65, 0x67, 0x65, 0x6e, 0x2f, 0x65, 0x63, 0x6f, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x72, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x65, 0x63,
	0x6f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a,
	0x23, 0x72, 0x65, 0x67, 0x65, 0x6e, 0x2f, 0x65, 0x63, 0x6f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x1d, 0x4d, 0x73,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x64, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x2e, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x54, 0x6f,
	0x67, 0x67, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x65, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x4d, 0x0a, 0x10, 0x61, 0x64, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x65, 0x67, 0x65,
	0x6e, 0x2e, 0x65, 0x63, 0x6f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e,
	0x61, 0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x9d,
	0x02, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x46, 0x65, 0x65, 0x73, 0x12, 0x7c, 0x0a, 0x14, 0x61,
	0x64, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x11, 0x61, 0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x46, 0x65, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x17, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf, 0x1f, 0x28,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x14, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x46, 0x65, 0x65, 0x22, 0xad,
	0x02, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x73, 0x12, 0x82,
	0x01, 0x0a, 0x17, 0x61, 0x64, 0x64, 0x5f, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x30, 0xc8, 0xde, 0x1f,
	0x00, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x14, 0x61,
	0x64, 0x64, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x65, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x1a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x62,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x17, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x42, 0xfc,
	0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x65, 0x63, 0x6f,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x42, 0x0b,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x52, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x67, 0x65, 0x6e, 0x2d,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x72, 0x65, 0x67, 0x65, 0x6e, 0x2d, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x67, 0x65, 0x6e, 0x2f, 0x65,
	0x63, 0x6f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x3b, 0x65, 0x63, 0x6f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0xa2, 0x02, 0x03, 0x52, 0x45, 0x58, 0xaa, 0x02, 0x17, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x2e,
	0x45, 0x63, 0x6f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0xca, 0x02, 0x17, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x5c, 0x45, 0x63, 0x6f, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xe2, 0x02, 0x23, 0x52, 0x65,
	0x67, 0x65, 0x6e, 0x5c, 0x45, 0x63, 0x6f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5c, 0x56, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x19, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x3a, 0x3a, 0x45, 0x63, 0x6f, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_regen_ecocredit_v1beta1_params_proto_rawDescOnce sync.Once
	file_regen_ecocredit_v1beta1_params_proto_rawDescData = file_regen_ecocredit_v1beta1_params_proto_rawDesc
)

func file_regen_ecocredit_v1beta1_params_proto_rawDescGZIP() []byte {
	file_regen_ecocredit_v1beta1_params_proto_rawDescOnce.Do(func() {
		file_regen_ecocredit_v1beta1_params_proto_rawDescData = protoimpl.X.CompressGZIP(file_regen_ecocredit_v1beta1_params_proto_rawDescData)
	})
	return file_regen_ecocredit_v1beta1_params_proto_rawDescData
}

var file_regen_ecocredit_v1beta1_params_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_regen_ecocredit_v1beta1_params_proto_goTypes = []interface{}{
	(*MsgUpdateAllowedClassCreators)(nil), // 0: regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators
	(*MsgToggleAllowlist)(nil),            // 1: regen.ecocredit.v1beta1.MsgToggleAllowlist
	(*MsgUpdateCreditTypes)(nil),          // 2: regen.ecocredit.v1beta1.MsgUpdateCreditTypes
	(*MsgUpdateCreditClassFees)(nil),      // 3: regen.ecocredit.v1beta1.MsgUpdateCreditClassFees
	(*MsgUpdateBasketCreationFees)(nil),   // 4: regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees
	(*CreditType)(nil),                    // 5: regen.ecocredit.v1beta1.CreditType
	(*v1beta1.Coin)(nil),                  // 6: cosmos.base.v1beta1.Coin
}
var file_regen_ecocredit_v1beta1_params_proto_depIdxs = []int32{
	5, // 0: regen.ecocredit.v1beta1.MsgUpdateCreditTypes.add_credit_types:type_name -> regen.ecocredit.v1beta1.CreditType
	6, // 1: regen.ecocredit.v1beta1.MsgUpdateCreditClassFees.add_credit_class_fee:type_name -> cosmos.base.v1beta1.Coin
	6, // 2: regen.ecocredit.v1beta1.MsgUpdateCreditClassFees.remove_credit_class_fee:type_name -> cosmos.base.v1beta1.Coin
	6, // 3: regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees.add_basket_creation_fee:type_name -> cosmos.base.v1beta1.Coin
	6, // 4: regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees.remove_basket_creation_fee:type_name -> cosmos.base.v1beta1.Coin
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_regen_ecocredit_v1beta1_params_proto_init() }
func file_regen_ecocredit_v1beta1_params_proto_init() {
	if File_regen_ecocredit_v1beta1_params_proto != nil {
		return
	}
	file_regen_ecocredit_v1beta1_state_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_regen_ecocredit_v1beta1_params_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateAllowedClassCreators); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_regen_ecocredit_v1beta1_params_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgToggleAllowlist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_regen_ecocredit_v1beta1_params_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateCreditTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_regen_ecocredit_v1beta1_params_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateCreditClassFees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_regen_ecocredit_v1beta1_params_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateBasketCreationFees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_regen_ecocredit_v1beta1_params_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_regen_ecocredit_v1beta1_params_proto_goTypes,
		DependencyIndexes: file_regen_ecocredit_v1beta1_params_proto_depIdxs,
		MessageInfos:      file_regen_ecocredit_v1beta1_params_proto_msgTypes,
	}.Build()
	File_regen_ecocredit_v1beta1_params_proto = out.File
	file_regen_ecocredit_v1beta1_params_proto_rawDesc = nil
	file_regen_ecocredit_v1beta1_params_proto_goTypes = nil
	file_regen_ecocredit_v1beta1_params_proto_depIdxs = nil
}
