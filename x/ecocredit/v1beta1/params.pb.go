// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: regen/ecocredit/v1beta1/params.proto

package v1beta1

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateAllowedClassCreators is a structure to update the allow list
type MsgUpdateAllowedClassCreators struct {
	// add_creators is a list of addresses to add to the allow list
	AddCreators string `protobuf:"bytes,1,opt,name=add_creators,json=addCreators,proto3" json:"add_creators,omitempty"`
	// remove_creators is a list of addresses to remove from the allow list
	RemoveCreators string `protobuf:"bytes,2,opt,name=remove_creators,json=removeCreators,proto3" json:"remove_creators,omitempty"`
}

func (m *MsgUpdateAllowedClassCreators) Reset()         { *m = MsgUpdateAllowedClassCreators{} }
func (m *MsgUpdateAllowedClassCreators) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAllowedClassCreators) ProtoMessage()    {}
func (*MsgUpdateAllowedClassCreators) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddf4867b1650016f, []int{0}
}
func (m *MsgUpdateAllowedClassCreators) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAllowedClassCreators) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAllowedClassCreators.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAllowedClassCreators) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAllowedClassCreators.Merge(m, src)
}
func (m *MsgUpdateAllowedClassCreators) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAllowedClassCreators) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAllowedClassCreators.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAllowedClassCreators proto.InternalMessageInfo

func (m *MsgUpdateAllowedClassCreators) GetAddCreators() string {
	if m != nil {
		return m.AddCreators
	}
	return ""
}

func (m *MsgUpdateAllowedClassCreators) GetRemoveCreators() string {
	if m != nil {
		return m.RemoveCreators
	}
	return ""
}

// MsgToggleAllowlist is a structure to toggle the global allow list.
type MsgToggleAllowlist struct {
	// setting is the boolean value to set for the allowlist.
	// true = on , false = off.
	Setting bool `protobuf:"varint,1,opt,name=setting,proto3" json:"setting,omitempty"`
}

func (m *MsgToggleAllowlist) Reset()         { *m = MsgToggleAllowlist{} }
func (m *MsgToggleAllowlist) String() string { return proto.CompactTextString(m) }
func (*MsgToggleAllowlist) ProtoMessage()    {}
func (*MsgToggleAllowlist) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddf4867b1650016f, []int{1}
}
func (m *MsgToggleAllowlist) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleAllowlist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleAllowlist.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleAllowlist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleAllowlist.Merge(m, src)
}
func (m *MsgToggleAllowlist) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleAllowlist) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleAllowlist.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleAllowlist proto.InternalMessageInfo

func (m *MsgToggleAllowlist) GetSetting() bool {
	if m != nil {
		return m.Setting
	}
	return false
}

type MsgUpdateCreditTypes struct {
	// add_credit_types is a list of credit types to add to the credit type list.
	AddCreditTypes []*CreditType `protobuf:"bytes,1,rep,name=add_credit_types,json=addCreditTypes,proto3" json:"add_credit_types,omitempty"`
}

func (m *MsgUpdateCreditTypes) Reset()         { *m = MsgUpdateCreditTypes{} }
func (m *MsgUpdateCreditTypes) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateCreditTypes) ProtoMessage()    {}
func (*MsgUpdateCreditTypes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddf4867b1650016f, []int{2}
}
func (m *MsgUpdateCreditTypes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateCreditTypes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateCreditTypes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateCreditTypes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateCreditTypes.Merge(m, src)
}
func (m *MsgUpdateCreditTypes) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateCreditTypes) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateCreditTypes.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateCreditTypes proto.InternalMessageInfo

func (m *MsgUpdateCreditTypes) GetAddCreditTypes() []*CreditType {
	if m != nil {
		return m.AddCreditTypes
	}
	return nil
}

type MsgUpdateCreditClassFees struct {
	// add_credit_class_fee defines coins to add to the existing fee list
	AddCreditClassFee github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,1,rep,name=add_credit_class_fee,json=addCreditClassFee,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"add_credit_class_fee"`
	// remove_credit_class_fee defines coins to remove from the existing fee list
	RemoveCreditClassFee github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,2,rep,name=remove_credit_class_fee,json=removeCreditClassFee,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"remove_credit_class_fee"`
}

func (m *MsgUpdateCreditClassFees) Reset()         { *m = MsgUpdateCreditClassFees{} }
func (m *MsgUpdateCreditClassFees) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateCreditClassFees) ProtoMessage()    {}
func (*MsgUpdateCreditClassFees) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddf4867b1650016f, []int{3}
}
func (m *MsgUpdateCreditClassFees) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateCreditClassFees) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateCreditClassFees.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateCreditClassFees) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateCreditClassFees.Merge(m, src)
}
func (m *MsgUpdateCreditClassFees) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateCreditClassFees) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateCreditClassFees.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateCreditClassFees proto.InternalMessageInfo

func (m *MsgUpdateCreditClassFees) GetAddCreditClassFee() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.AddCreditClassFee
	}
	return nil
}

func (m *MsgUpdateCreditClassFees) GetRemoveCreditClassFee() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.RemoveCreditClassFee
	}
	return nil
}

type MsgUpdateBasketCreationFees struct {
	// add_basket_creation_fee defines coins to add to the existing fee list
	AddBasketCreationFee github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,1,rep,name=add_basket_creation_fee,json=addBasketCreationFee,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"add_basket_creation_fee"`
	// remove_basket_creation_fee defines coins to remove from the existing fee list
	RemoveBasketCreationFee github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,2,rep,name=remove_basket_creation_fee,json=removeBasketCreationFee,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"remove_basket_creation_fee"`
}

func (m *MsgUpdateBasketCreationFees) Reset()         { *m = MsgUpdateBasketCreationFees{} }
func (m *MsgUpdateBasketCreationFees) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateBasketCreationFees) ProtoMessage()    {}
func (*MsgUpdateBasketCreationFees) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddf4867b1650016f, []int{4}
}
func (m *MsgUpdateBasketCreationFees) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateBasketCreationFees) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateBasketCreationFees.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateBasketCreationFees) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateBasketCreationFees.Merge(m, src)
}
func (m *MsgUpdateBasketCreationFees) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateBasketCreationFees) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateBasketCreationFees.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateBasketCreationFees proto.InternalMessageInfo

func (m *MsgUpdateBasketCreationFees) GetAddBasketCreationFee() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.AddBasketCreationFee
	}
	return nil
}

func (m *MsgUpdateBasketCreationFees) GetRemoveBasketCreationFee() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.RemoveBasketCreationFee
	}
	return nil
}

func init() {
	proto.RegisterType((*MsgUpdateAllowedClassCreators)(nil), "regen.ecocredit.v1beta1.MsgUpdateAllowedClassCreators")
	proto.RegisterType((*MsgToggleAllowlist)(nil), "regen.ecocredit.v1beta1.MsgToggleAllowlist")
	proto.RegisterType((*MsgUpdateCreditTypes)(nil), "regen.ecocredit.v1beta1.MsgUpdateCreditTypes")
	proto.RegisterType((*MsgUpdateCreditClassFees)(nil), "regen.ecocredit.v1beta1.MsgUpdateCreditClassFees")
	proto.RegisterType((*MsgUpdateBasketCreationFees)(nil), "regen.ecocredit.v1beta1.MsgUpdateBasketCreationFees")
}

func init() {
	proto.RegisterFile("regen/ecocredit/v1beta1/params.proto", fileDescriptor_ddf4867b1650016f)
}

var fileDescriptor_ddf4867b1650016f = []byte{
	// 477 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0xbf, 0x6e, 0x13, 0x41,
	0x10, 0xc6, 0x7d, 0x46, 0xe2, 0xcf, 0x06, 0x05, 0x38, 0x59, 0x8a, 0x31, 0xe2, 0x12, 0x2e, 0x48,
	0xb8, 0xc9, 0x1e, 0x81, 0x8a, 0x12, 0x5b, 0xa2, 0x73, 0x63, 0x42, 0x43, 0x63, 0xed, 0xdd, 0x0e,
	0xcb, 0xca, 0xe7, 0x1b, 0x6b, 0x67, 0x49, 0x40, 0xa2, 0xa2, 0xa2, 0xe4, 0x05, 0x78, 0x01, 0x24,
	0xde, 0x23, 0x65, 0x4a, 0x2a, 0x40, 0xf6, 0x8b, 0xa0, 0xdb, 0x5b, 0xdf, 0x19, 0x4c, 0xba, 0xa4,
	0xba, 0xdd, 0xd9, 0x6f, 0x66, 0x7e, 0xf7, 0xcd, 0x2e, 0x7b, 0x68, 0x40, 0x41, 0x91, 0x40, 0x86,
	0x99, 0x01, 0xa9, 0x6d, 0x72, 0x7c, 0x98, 0x82, 0x15, 0x87, 0xc9, 0x5c, 0x18, 0x31, 0x23, 0x3e,
	0x37, 0x68, 0x31, 0xdc, 0x71, 0x2a, 0x5e, 0xab, 0xb8, 0x57, 0xf5, 0xf6, 0xcf, 0x4b, 0x27, 0x2b,
	0x2c, 0x54, 0xd9, 0xbd, 0x28, 0x43, 0x9a, 0x21, 0x25, 0xa9, 0x20, 0xa8, 0x05, 0x19, 0xea, 0xc2,
	0x9f, 0x77, 0x14, 0x2a, 0x74, 0xcb, 0xa4, 0x5c, 0x55, 0xd1, 0x78, 0xca, 0xee, 0x8f, 0x48, 0xbd,
	0x9a, 0x4b, 0x61, 0xe1, 0x79, 0x9e, 0xe3, 0x09, 0xc8, 0x61, 0x2e, 0x88, 0x86, 0x06, 0x84, 0x45,
	0x43, 0xe1, 0x03, 0x76, 0x53, 0x48, 0x39, 0xc9, 0xfc, 0xbe, 0x1b, 0xec, 0x05, 0xfd, 0x1b, 0xe3,
	0x2d, 0x21, 0x65, 0x2d, 0x79, 0xc4, 0x6e, 0x19, 0x98, 0xe1, 0x31, 0x34, 0xaa, 0xb6, 0x53, 0x6d,
	0x57, 0xe1, 0x95, 0x30, 0xe6, 0x2c, 0x1c, 0x91, 0x3a, 0x42, 0xa5, 0xf2, 0xaa, 0x59, 0xae, 0xc9,
	0x86, 0x5d, 0x76, 0x8d, 0xc0, 0x5a, 0x5d, 0x28, 0x57, 0xfc, 0xfa, 0x78, 0xb5, 0x8d, 0x81, 0x75,
	0x6a, 0xb8, 0xa1, 0xfb, 0xf3, 0xa3, 0x0f, 0x73, 0xa0, 0x70, 0xc4, 0x6e, 0x7b, 0x26, 0xa9, 0xed,
	0xc4, 0x96, 0xb1, 0x6e, 0xb0, 0x77, 0xa5, 0xbf, 0xf5, 0x64, 0x9f, 0x9f, 0xe3, 0x21, 0x6f, 0xf2,
	0xc7, 0xdb, 0x15, 0xfc, 0xaa, 0x5c, 0xfc, 0xb5, 0xcd, 0xba, 0xff, 0xf4, 0x71, 0x1e, 0xbc, 0x00,
	0xa0, 0xf0, 0x23, 0xeb, 0xac, 0xf5, 0xca, 0xca, 0xf8, 0xe4, 0x0d, 0x80, 0xef, 0x77, 0x97, 0x57,
	0xae, 0xf3, 0xd2, 0xf5, 0xa6, 0x17, 0xea, 0x62, 0xf0, 0xf8, 0xf4, 0xe7, 0x6e, 0xeb, 0xdb, 0xaf,
	0xdd, 0xbe, 0xd2, 0xf6, 0xed, 0xbb, 0x94, 0x67, 0x38, 0x4b, 0xfc, 0x88, 0xaa, 0xcf, 0x01, 0xc9,
	0x69, 0xe2, 0xe0, 0x5d, 0x02, 0x8d, 0xef, 0xd4, 0x5c, 0xab, 0xf6, 0xe1, 0xa7, 0x80, 0xed, 0x34,
	0xde, 0xfe, 0x4d, 0xd0, 0xbe, 0x78, 0x82, 0x4e, 0x3d, 0xb0, 0x35, 0x88, 0xf8, 0x7b, 0x9b, 0xdd,
	0xab, 0xfd, 0x19, 0x08, 0x9a, 0x82, 0x75, 0x23, 0xd5, 0x58, 0x38, 0x8b, 0x4a, 0xc8, 0xd2, 0xa3,
	0xd4, 0x1d, 0x55, 0x97, 0x40, 0x63, 0x71, 0x59, 0x36, 0x95, 0xf3, 0xd8, 0xa0, 0x08, 0x3f, 0x07,
	0xac, 0xe7, 0x9d, 0xfa, 0x1f, 0xc7, 0x25, 0x98, 0xe5, 0x07, 0xb3, 0x81, 0x32, 0x78, 0x79, 0xba,
	0x88, 0x82, 0xb3, 0x45, 0x14, 0xfc, 0x5e, 0x44, 0xc1, 0x97, 0x65, 0xd4, 0x3a, 0x5b, 0x46, 0xad,
	0x1f, 0xcb, 0xa8, 0xf5, 0xfa, 0xd9, 0x5a, 0x71, 0x77, 0x51, 0x0f, 0x0a, 0xb0, 0x27, 0x68, 0xa6,
	0x7e, 0x97, 0x83, 0x54, 0x60, 0x92, 0xf7, 0x9b, 0x4f, 0x3d, 0xbd, 0xea, 0xde, 0xeb, 0xd3, 0x3f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x09, 0x7d, 0xd2, 0xf4, 0x4b, 0x04, 0x00, 0x00,
}

func (m *MsgUpdateAllowedClassCreators) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAllowedClassCreators) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAllowedClassCreators) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RemoveCreators) > 0 {
		i -= len(m.RemoveCreators)
		copy(dAtA[i:], m.RemoveCreators)
		i = encodeVarintParams(dAtA, i, uint64(len(m.RemoveCreators)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AddCreators) > 0 {
		i -= len(m.AddCreators)
		copy(dAtA[i:], m.AddCreators)
		i = encodeVarintParams(dAtA, i, uint64(len(m.AddCreators)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgToggleAllowlist) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleAllowlist) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleAllowlist) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Setting {
		i--
		if m.Setting {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateCreditTypes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateCreditTypes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateCreditTypes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AddCreditTypes) > 0 {
		for iNdEx := len(m.AddCreditTypes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AddCreditTypes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintParams(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateCreditClassFees) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateCreditClassFees) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateCreditClassFees) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RemoveCreditClassFee) > 0 {
		for iNdEx := len(m.RemoveCreditClassFee) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RemoveCreditClassFee[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintParams(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.AddCreditClassFee) > 0 {
		for iNdEx := len(m.AddCreditClassFee) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AddCreditClassFee[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintParams(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateBasketCreationFees) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateBasketCreationFees) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateBasketCreationFees) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RemoveBasketCreationFee) > 0 {
		for iNdEx := len(m.RemoveBasketCreationFee) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RemoveBasketCreationFee[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintParams(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.AddBasketCreationFee) > 0 {
		for iNdEx := len(m.AddBasketCreationFee) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AddBasketCreationFee[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintParams(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintParams(dAtA []byte, offset int, v uint64) int {
	offset -= sovParams(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateAllowedClassCreators) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AddCreators)
	if l > 0 {
		n += 1 + l + sovParams(uint64(l))
	}
	l = len(m.RemoveCreators)
	if l > 0 {
		n += 1 + l + sovParams(uint64(l))
	}
	return n
}

func (m *MsgToggleAllowlist) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Setting {
		n += 2
	}
	return n
}

func (m *MsgUpdateCreditTypes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.AddCreditTypes) > 0 {
		for _, e := range m.AddCreditTypes {
			l = e.Size()
			n += 1 + l + sovParams(uint64(l))
		}
	}
	return n
}

func (m *MsgUpdateCreditClassFees) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.AddCreditClassFee) > 0 {
		for _, e := range m.AddCreditClassFee {
			l = e.Size()
			n += 1 + l + sovParams(uint64(l))
		}
	}
	if len(m.RemoveCreditClassFee) > 0 {
		for _, e := range m.RemoveCreditClassFee {
			l = e.Size()
			n += 1 + l + sovParams(uint64(l))
		}
	}
	return n
}

func (m *MsgUpdateBasketCreationFees) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.AddBasketCreationFee) > 0 {
		for _, e := range m.AddBasketCreationFee {
			l = e.Size()
			n += 1 + l + sovParams(uint64(l))
		}
	}
	if len(m.RemoveBasketCreationFee) > 0 {
		for _, e := range m.RemoveBasketCreationFee {
			l = e.Size()
			n += 1 + l + sovParams(uint64(l))
		}
	}
	return n
}

func sovParams(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozParams(x uint64) (n int) {
	return sovParams(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateAllowedClassCreators) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowParams
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAllowedClassCreators: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAllowedClassCreators: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddCreators", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddCreators = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoveCreators", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoveCreators = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipParams(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthParams
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleAllowlist) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowParams
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleAllowlist: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleAllowlist: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Setting", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Setting = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipParams(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthParams
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateCreditTypes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowParams
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateCreditTypes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateCreditTypes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddCreditTypes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddCreditTypes = append(m.AddCreditTypes, &CreditType{})
			if err := m.AddCreditTypes[len(m.AddCreditTypes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipParams(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthParams
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateCreditClassFees) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowParams
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateCreditClassFees: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateCreditClassFees: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddCreditClassFee", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddCreditClassFee = append(m.AddCreditClassFee, types.Coin{})
			if err := m.AddCreditClassFee[len(m.AddCreditClassFee)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoveCreditClassFee", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoveCreditClassFee = append(m.RemoveCreditClassFee, types.Coin{})
			if err := m.RemoveCreditClassFee[len(m.RemoveCreditClassFee)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipParams(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthParams
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateBasketCreationFees) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowParams
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateBasketCreationFees: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateBasketCreationFees: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddBasketCreationFee", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddBasketCreationFee = append(m.AddBasketCreationFee, types.Coin{})
			if err := m.AddBasketCreationFee[len(m.AddBasketCreationFee)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoveBasketCreationFee", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoveBasketCreationFee = append(m.RemoveBasketCreationFee, types.Coin{})
			if err := m.RemoveBasketCreationFee[len(m.RemoveBasketCreationFee)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipParams(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthParams
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipParams(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowParams
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthParams
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupParams
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthParams
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthParams        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowParams          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupParams = fmt.Errorf("proto: unexpected end of group")
)
