syntax = "proto3";

package regen.ecocredit.state.v1alpha2;

import "google/protobuf/timestamp.proto";
import "regen/orm/v1alpha1/orm.proto";

// ClassInfo represents the high-level on-chain information for a credit class.
message ClassInfo {
  option (regen.orm.v1alpha1.table) = {
    id: 0
    primary_key: {
      fields: "class_id"
    }
    index: {
      id: 0
      fields: "credit_type"
    }
    index: {
      id: 1
      fields: "admin"
    }
  };

  // class_id is the unique ID of credit class.
  string class_id = 1;

  // admin is the admin of the credit class.
  string admin = 2;

  // issuers are the approved issuers of the credit class.
  repeated string issuers = 3;

  // metadata is any arbitrary metadata to attached to the credit class.
  bytes metadata = 4;

  // credit_type_abbrev is the abbreviation of the credit type.
  string credit_type_abbrev = 5;

  // The number of batches issued in this credit class.
  uint64 num_batches = 6;
}

message ProjectInfo {
  option (regen.orm.v1alpha1.table) = {
    id: 0
    primary_key: {
      fields: "project_id"
    }
    index: {
      id: 0
      fields: "class_id"
    }
  };

  // project_id is the unique ID of the project.
  string project_id = 1;

  // class_id is the unique ID of credit class for this project.
  string class_id = 2;

  // project_location is the location of the project.
  // Full documentation can be found in MsgCreateProject.project_location.
  string project_location = 3;

  // metadata is any arbitrary metadata attached to the project.
  bytes metadata = 4;
}

// BatchInfo represents the high-level on-chain information for a credit batch.
message BatchInfo {
  option (regen.orm.v1alpha1.table) = {
    id: 0
    primary_key: {
      fields: "batch_denom"
    }
    index: {
      id: 0
      fields: "project_id"
    }
  };

  // project_id is the unique ID of the project this batch belongs to.
  string project_id = 1;

  // batch_denom is the unique ID of credit batch.
  string batch_denom = 2;

  // total_amount is the total number of active credits in the credit batch.
  // Some of the issued credits may be cancelled and will be removed from
  // total_amount and tracked in amount_cancelled. total_amount and
  // amount_cancelled will always sum to the original amount of credits that
  // were issued.
  string total_amount = 4;

  // metadata is any arbitrary metadata attached to the credit batch.
  bytes metadata = 5;

  // amount_cancelled is the number of credits in the batch that have been
  // cancelled, effectively undoing there issuance. The sum of total_amount and
  // amount_cancelled will always sum to the original amount of credits that
  // were issued.
  string amount_cancelled = 6;

  // start_date is the beginning of the period during which this credit batch
  // was quantified and verified.
  google.protobuf.Timestamp start_date = 7;

  // end_date is the end of the period during which this credit batch was
  // quantified and verified.
  google.protobuf.Timestamp end_date = 8;
}

