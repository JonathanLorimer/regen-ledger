syntax = "proto3";
package regen.bond.v1alpha1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "regen/bond/v1alpha1/params.proto";
import "regen/bond/v1alpha1/types.proto";

option go_package = "github.com/regen-network/regen-ledger/x/bond";

// Query defines the gRPC query service.
service Query {

  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/regenledger/bond/v1alpha1/params";
  }

  // Parameters queries the parameters of the module.
  rpc Bonds(QueryBondsRequest) returns (QueryBondsResponse) {
    option (google.api.http).get = "/regen.bond.v1alpha1.Query/Bonds";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
   Params params = 1 [(gogoproto.nullable) = false];
}

message QueryBondsRequest {
  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryBondsResponse {
  // bonds.
  repeated BondInfo bonds = 1;

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
